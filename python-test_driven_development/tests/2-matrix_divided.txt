>>> div = __import__("2-matrix_divided").matrix_divided
>>> matrix = [20,50]
>>> div(matrix, 20)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[20,True],[40]]
>>> div(matrix, 20)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> div(40, 10)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> div(10)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> div()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> div([[2,4,6],[8,10,12]], 2)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
>>> div([[2,4,6],[8,10,12]], True)
Traceback (most recent call last):
TypeError: div must be a number
>>> div([[2,4,6],[8,10,12]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero
>>> div([[2,4,6],[8,10,12]], 3)
[[0.67, 1.33, 2.0], [2.67, 3.33, 4.0]]
>>> div([[2,3],[5,4,1,3]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
>>> div([[2,4,6],[8,10,12]], float("inf"))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
